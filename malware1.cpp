//

#include "stdafx.h"
#include <Windows.h>



void getFunctionSignature(){
	char *ptrSig = (char *)CreateProcess;
	printf("\nFunction signature :\n");
	for (int i = 0; i<12; i++) {
		printf("'\\x%02x', ", (*(ptrSig + i) & 0xff));
	}
}

void getOffuscatedString(){
	char messageString[23] = "c:\\windows\\notepad.exe";
	printf("\nOffuscated String :\n");
	for (int i = 0; i<23; i++){
		messageString[i] = messageString[i] ^ 42;
		printf("'\\x%02x',", messageString[i] & 0xff);
	}

}



int _tmain(int argc, _TCHAR* argv[])
{
	
/* Call printf via reference starting at the beginning of the library */
	/* Looking for header of library*/
	char signatureHeader[8] = { '\x4d', '\x5a', '\x90', '\x00', '\x03', '\x00', '\x00', '\x00' };
	
	char *ptr = (char *)scanf;

	bool found = 0;
	while (!found){
		ptr--;
		found = !(memcmp(signatureHeader, ptr, 8));
	}

	printf("Found header : %x\n", ptr);


	/* Looking for printf position starting from header (use getFunctionSignature() )  */
	char signaturePrintf[12] = { '\x6a', '\x0c', '\x68', '\x88', '\x30', '\xac', '\x6b', '\xe8', '\x99', '\xbd',
		'\xf8', '\xff' };
	found = 0;
	while (!found){
		ptr++;
		found = !(memcmp(signaturePrintf, ptr, 12));
	}
	printf("Found printf : %x\n", ptr);

	/* Using fonction printf via ptr position */
	typedef void(*Mytype)(char* c, ...);
	Mytype myprintf = (Mytype)ptr;
	myprintf("Hello world from hidden call!");


/* Hide call Createprocess function */

	STARTUPINFO startinfo = {0};
	PROCESS_INFORMATION processInfo = {0};


	/* Find header position starting on sleep */

	char *ptrProcess = (char *)Sleep;

	found = 0;
	while (!found){
		ptrProcess--;
		found = !(memcmp(signatureHeader, ptrProcess, 8));
	}

	/* Get the signature of function createprocess */
	getFunctionSignature();

	char signatureCreateProcess[] = { '\x8b', '\xff', '\x55', '\x8b', '\xec', '\x6a', '\x00',
		'\xff', '\x75', '\x2c', '\xff', '\x75' };

	/* Looking for position */
	found = 0;
	
	while (!found){
		ptrProcess++;
		found = !(memcmp(signatureCreateProcess, ptrProcess, 12));
	}
	

	/* Call it */
	typedef void (*CreateProcessType)(...);
	CreateProcessType myCreateProcess = (CreateProcessType)ptrProcess;

	myCreateProcess(TEXT("c:\\windows\\notepad.exe"), NULL, NULL, NULL, FALSE, NULL, NULL,
		NULL, &startinfo, &processInfo);
	
	/* Offuscated application name */

	getOffuscatedString();
	char prg[23] = { '\x49', '\x10', '\x76', '\x5d', '\x43', '\x44', '\x4e', '\x45','\x5d', 
		'\x59', '\x76', '\x44','\x45','\x5e','\x4f','\x5a','\x4b','\x4e','\x04','\x4f','\x52',
		'\x4f','\x2a' };

	printf("Validate decipher :\n");
	for (int i = 0; i < 23; i++){
		prg[i] = prg[i] ^ 42;
		printf("%c", prg[i]);
	}
	
	/* Call the myCreateProcess(...) with offuscated string (stuck with conversion TEXT) */

	while (1){
		Sleep(3000);
	}
	return 0;
}

